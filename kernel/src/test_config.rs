//! Test configuration for VeridianOS kernel
//!
//! This module configures the custom test framework to bypass lang_items
//! conflicts.

#![cfg(test)]

use crate::test_framework;

/// Custom test runner entry point
#[cfg(test)]
#[no_mangle]
pub extern "C" fn _start() -> ! {
    // Initialize minimal kernel systems for testing
    crate::arch::init();
    crate::serial_println!("\n=== VeridianOS Kernel Test Suite ===\n");

    // Run all tests using our custom framework
    test_main();

    // Should never reach here
    loop {
        crate::arch::halt();
    }
}

/// Test main function that will be generated by the test framework
#[cfg(test)]
fn test_main() {
    // This will be replaced by the actual test runner
    use crate::test_framework::{test_runner, Testable};

    // Collect all test cases (this would be generated by the build system)
    let tests: &[&dyn Testable] = &[
        // Tests will be inserted here by the test framework
    ];

    test_runner(tests);
}

/// Panic handler for test mode
#[cfg(test)]
#[panic_handler]
fn panic(info: &core::panic::PanicInfo) -> ! {
    test_framework::test_panic_handler(info)
}

/// Language items required for custom test framework
#[cfg(test)]
#[lang = "eh_personality"]
extern "C" fn eh_personality() {}

/// Required for tests but not used
#[cfg(test)]
#[allow(non_snake_case)]
#[no_mangle]
pub extern "C" fn _Unwind_Resume() -> ! {
    loop {
        crate::arch::halt();
    }
}
