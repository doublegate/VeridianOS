var searchIndex = new Map(JSON.parse('[["veridian_kernel",{"t":"PGPKCQNNNNNNHNNNQQQHQQMCQQQHHNNNNKFFNOHNNNNNNNHNNNNNNOONOMONNHMNNONNNNNNFNNNNNNNNN","n":["Failed","QemuExitCode","Success","Testable","bench","benchmark","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","exit_qemu","fmt","from","into","kernel_assert","kernel_assert_eq","kernel_assert_ne","kernel_main","print","println","run","serial","serial_print","serial_println","test_module","test_panic_handler","test_runner","to_owned","try_from","try_into","type_id","Benchmark","BenchmarkHarness","BenchmarkResult","add_benchmark","avg_time_ns","bench_function","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cycles_to_ns","default","fmt","from","","into","","iterations","max_time_ns","meets_target","min_time_ns","name","","new","","read_timestamp","run","run_all","to_owned","total_time_ns","try_from","","try_into","","type_id","","SerialPort","borrow","borrow_mut","from","from_inner","into","try_from","try_into","type_id","write_str"],"q":[[0,"veridian_kernel"],[33,"veridian_kernel::bench"],[72,"veridian_kernel::serial"],[82,"veridian_kernel::test_framework"],[83,"core::fmt"],[84,"core::panic::panic_info"],[85,"core::result"],[86,"core::any"],[87,"alloc::boxed"],[88,"core::ops::function"],[89,"alloc::string"],[90,"alloc::vec"],[91,"uart_16550::port"]],"i":"f`0```000000`000``````Ad``````1111```AnBh`1010000`1010100000B`121`0211212121`Cb00000000","f":"``````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{f}}{b{f}}}l}{fn}{{{b{f}}{b{dA`}}}Ab}{cc{}}{{}c{}}```{{}n}``{{{b{Ad}}}h}````{{{b{Af}}}n}{{{b{{Ah{{b{Ad}}}}}}}h}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}```{{{b{dAn}}{Bb{B`}}}h}`{{{b{Bd}}Bfc}BhBj}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Bh}}}Bh}{{b{b{dc}}}h{}}{{bj}h}{BfBf}{{}An}{{{b{Bh}}{b{dA`}}}Ab}{cc{}}0{{}c{}}0``{{{b{Bh}}Bf}l}`{{{b{B`}}}{{b{Bd}}}}`5{{Bl{b{{Ah{Bf}}}}}Bh}{{}Bf}{{{b{dB`}}}Bh}{{{b{dAn}}}{{Bn{Bh}}}}{bc{}}`{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}={C`Cb}=543{{{b{dCb}}{b{Bd}}}Ab}","D":"Cd","p":[[1,"reference",null,null,1],[0,"mut"],[6,"QemuExitCode",0,82],[1,"unit"],[1,"u8"],[1,"bool"],[1,"never"],[5,"Formatter",83],[8,"Result",83],[10,"Testable",0,82],[5,"PanicInfo",84],[1,"slice"],[6,"Result",85,null,1],[5,"TypeId",86],[5,"BenchmarkHarness",33],[10,"Benchmark",33],[5,"Box",87,null,1],[1,"str"],[1,"u64"],[5,"BenchmarkResult",33],[10,"FnMut",88],[5,"String",89],[5,"Vec",90],[5,"SerialPort",91],[5,"SerialPort",72]],"r":[[0,82],[1,82],[2,82],[3,82],[6,82],[7,82],[8,82],[9,82],[10,82],[11,82],[12,82],[13,82],[14,82],[15,82],[22,82],[27,82],[28,82],[29,82],[30,82],[31,82],[32,82]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADgADgABAAIABgAGAA4AAAASAAgAHgADACUAAQAoAAYAMAABADYAAQA5AAAAOwABAEAACwBNAAAATwADAA==","P":[[6,"T"],[8,""],[9,"T"],[10,""],[14,"T"],[15,"U"],[19,""],[29,"T"],[30,"U,T"],[31,"U"],[32,""],[38,"F"],[39,"T"],[43,""],[44,"T"],[45,""],[49,"T"],[51,"U"],[55,""],[64,"T"],[66,"U,T"],[68,"U"],[70,""],[73,"T"],[76,""],[77,"U"],[78,"U,T"],[79,"U"],[80,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3024]}