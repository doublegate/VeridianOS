name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-D warnings"

jobs:
  # Quick checks that should fail fast
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2025-01-15
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features

  # Build and test for all architectures
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: quick-checks
    strategy:
      matrix:
        target: [x86_64-veridian, aarch64-veridian, riscv64gc-veridian]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2025-01-15
          components: rust-src, llvm-tools-preview
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-
      
      - name: Install QEMU (x86_64 only)
        if: matrix.target == 'x86_64-veridian'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86
      
      - name: Check
        run: cargo check --target targets/${{ matrix.target }}.json -p veridian-kernel
      
      - name: Build
        run: cargo build --release --target targets/${{ matrix.target }}.json -p veridian-kernel
      
      - name: Test (x86_64 only)
        if: matrix.target == 'x86_64-veridian'
        run: cargo test --target targets/${{ matrix.target }}.json -p veridian-kernel
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: veridian-kernel-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/veridian-kernel
          retention-days: 7

  # Security audit (can run in parallel)
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run cargo-audit
        uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}